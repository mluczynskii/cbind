#define SAFE_FETCH_INTEGER(L, idx, var) \
  if (lua_isinteger(L, idx))            \
    var = lua_tointeger(L, idx);        \
  else                                  \
    return luaL_error(L, "Expected integer at argument %d", idx);

#define SAFE_FETCH_NUMBER(L, idx, var) \
  if (lua_isnumber(L, idx))            \
    var = lua_tonumber(L, idx);        \
  else                                 \
    return luaL_error(L, "Expected real number at argument %d", idx);

#define SAFE_FETCH_CHARACTER(L, idx, var) \
  if (lua_isstring(L, idx))               \
    var = lua_tostring(L, idx)[0];        \
  else                                    \
    return luaL_error(L, "Expected character at argument %d", idx);

#define SAFE_FETCH_USERDATA(L, idx, var, typename) \
  var = *(typename *)luaL_checkudata(L, idx, #typename);