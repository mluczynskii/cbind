{#- macros.c.j2
  A collection of useful macros used throughout the various templates.
-#}
{% macro typename(struct) -%}
  {%- if struct.Typedef -%}
    {{ struct.Typename }}
  {%- else -%}
    {{ "struct" ~ struct.Typename }}
  {%- endif -%}
{%- endmacro %}

{% macro pop(argument, index, var) -%}
  {%- if argument.Kind == "record_type" -%}
    {%- set name = typename(argument) -%}
    SAFE_FETCH_USERDATA(L, {{ index }}, {{ var }}, {{ name }})
  {%- elif argument.Kind == "character_type" -%}
    SAFE_FETCH_CHARACTER(L, {{ index }}, {{ var }})
  {%- elif argument.Kind == "integer_type" -%}
    SAFE_FETCH_INTEGER(L, {{ index }}, {{ var }})
  {%- elif argument.Kind == "real_type" -%}
    SAFE_FETCH_NUMBER(L, {{ index }}, {{ var }})
  {%- else -%}
    /* undefined */
  {%- endif -%}
{%- endmacro %}

{% macro pass(argument, index) -%}
{%- endmacro %}

{% macro push(type, name) -%}
  {%- if type.Kind == "integer_type" -%}
    lua_pushinteger(L, {{ name }})
  {%- elif type.Kind == "character_type" -%}
    (void)lua_pushlstring(L, &({{ name }}), 1)
  {%- elif type.Kind == "real_type" -%}
    lua_pushnumber(L, {{ name }})
  {%- else -%}
    /* undefined */
  {%- endif -%}
{%- endmacro %}